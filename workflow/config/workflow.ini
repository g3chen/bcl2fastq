# This is designed to work on the VM with our sample data, you will need to customize for your environment/project
java=java
perl=perl
output_dir=results
output_prefix=./
# key=intensity_folder:type=text:display=T:display_name=Flowcell Intensity Directory
intensity_folder=${workflow_bundle_dir}/Workflow_Bundle_${workflow-directory-name}/${version}/data/OICR/110916_SN804_0064_AD04TBACXX/Data/Intensities
# key=flowcell:type=text:display=T:display_name=Flowcell
flowcell=110916_SN804_0064_AD04TBACXX
# key=read_ends:type=integer:display=T:display_name=Read Ends
read_ends=2
# key=lanes:type=text:display=T:display_name=Lanes and Barcodes String (format "<lane_number_[1-8]>,<lane_sw_accession><colon><barcode|NoIndex>,<sw_accession_for_parent>,<sample_name>+<barcode|NoIndex>,<sw_accession_for_parent>,<sample_name>|...")
#lanes=1,8291:NoIndex,192939,PCSI_0106_Ly_R_PE_190_WG
lanes=1,9857:NoIndex,9858,PCSI_0106_Ly_R_PE_190_WG
# the tile param will generally be left empty since it will limit processing (across all lanes defined above) to only one tile. We use this for testing within the bundle and you may find it useful for testing too. Not for use with production, though.
tile=1101
bustard=${workflow_bundle_dir}/Workflow_Bundle_${workflow-directory-name}/${version}/bin/OLB-1.9.3/bin/bustard.py
bcl_to_fastq=${workflow_bundle_dir}/Workflow_Bundle_${workflow-directory-name}/${version}/bin/CASAVA-1.8.2/bin/configureBclToFastq.pl
slots=1
threads=1
memory=4000
do_olb=0
called_bases=${workflow_bundle_dir}/Workflow_Bundle_${workflow-directory-name}/${version}/data/OICR/110916_SN804_0064_AD04TBACXX/Data/Intensities/BaseCalls
queue=production
